name: GKE Microservice Deployment

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  CLUSTER_NAME: ${{ secrets.GCP_GKE_CLUSTER }}
  STATIC_IP_NAME: ${{ secrets.GCP_STATIC_IP_NAME }}
  STATIC_IP_REGION: ${{ secrets.GCP_STATIC_IP_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Verify gcloud auth
        run: gcloud auth list

      # 👇 Reserve or fetch Static IP
      - name: Reserve or fetch static IP
        run: |
          if [ -z "$STATIC_IP_NAME" ]; then
            echo "❌ ERROR: GCP_STATIC_IP_NAME secret is missing"
            exit 1
          fi

          if ! gcloud compute addresses describe "$STATIC_IP_NAME" \
            --region="$STATIC_IP_REGION" \
            --project="$PROJECT_ID" >/dev/null 2>&1; then
            echo "⚡ Reserving new static IP: $STATIC_IP_NAME"
            gcloud compute addresses create "$STATIC_IP_NAME" \
              --region="$STATIC_IP_REGION" \
              --project="$PROJECT_ID"
          else
            echo "✅ Static IP $STATIC_IP_NAME already exists"
          fi

          IP_ADDRESS=$(gcloud compute addresses describe "$STATIC_IP_NAME" \
            --region="$STATIC_IP_REGION" \
            --project="$PROJECT_ID" \
            --format="value(address)")

          echo "STATIC_IP=$IP_ADDRESS" >> $GITHUB_ENV
          echo "✅ Using static IP: $IP_ADDRESS"

      # 👇 Terraform init/plan/apply
      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform -chdir=terraform apply -auto-approve tfplan

      # 👇 Get GKE credentials
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials "$CLUSTER_NAME" \
            --region "$REGION" \
            --project "$PROJECT_ID"

      # 👇 Install Helm
      - name: Setup Helm
        uses: azure/setup-helm@v3

      # 👇 Deploy microservice with Helm using static IP
      - name: Deploy microservice with Helm
        run: |
          helm upgrade --install microservice ./helm/microservice \
            --set ingress.hosts[0].host=${STATIC_IP}.nip.io \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType=Prefix

      # 👇 Verify rollout
      - name: Verify rollout
        run: |
          echo "⏳ Waiting for pods to be ready..."
          kubectl rollout status deployment/microservice --timeout=120s
          echo "📜 Listing resources:"
          kubectl get all
          echo "🌐 Test URL: http://${STATIC_IP}.nip.io"
