name: GKE Deployment

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  STATIC_IP_NAME: ${{ secrets.GCP_STATIC_IP_NAME }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.GKE_SA_KEY }}

jobs:
  # 1. Authenticate to GCP
  auth:
    name: Authenticate to GCP
    runs-on: ubuntu-latest
    outputs:
      credentials_path: ${{ steps.auth.outputs.credentials }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

  # 2. Verify GKE Cluster & Static IP
  verify:
    name: Verify GKE & Static IP
    runs-on: ubuntu-latest
    needs: auth
    steps:
      - name: Configure kubectl
        run: |
          echo "⏳ Fetching GKE credentials..."
          gcloud container clusters get-credentials $CLUSTER_NAME --region $REGION --project $PROJECT_ID

      - name: Verify Static IP Exists
        run: |
          echo "⏳ Checking static IP $STATIC_IP_NAME in $REGION..."
          gcloud compute addresses describe $STATIC_IP_NAME --region $REGION --project $PROJECT_ID || {
            echo "❌ Static IP not found!"; exit 1;
          }

      - name: Test Cluster Access
        run: |
          kubectl get nodes || { echo "❌ Cannot access cluster"; exit 1; }

  # 3. Deploy Ingress-NGINX & App via Helm
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - name: Install Helm
        run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Add NGINX Ingress Repo
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

      - name: Install NGINX Ingress Controller
        run: |
          kubectl create namespace ingress-nginx --dry-run=client -o yaml | kubectl apply -f -
          helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-nginx \
            --set controller.publishService.enabled=true \
            --wait --timeout=10m

      - name: Deploy Microservice via Helm
        run: |
          helm upgrade --install microservice ./helm/microservice \
            --namespace default \
            --wait --timeout=10m

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/microservice || { echo "❌ Deployment failed"; exit 1; }
          kubectl get svc,ingress -A

