name: Deploy Microservice to GKE

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  CLUSTER_REGION: ${{ secrets.GKE_CLUSTER_REGION }}     # regional cluster
  RELEASE_NAME: microservice
  NAMESPACE: default
  STATIC_IP: ${{ secrets.GKE_STATIC_IP }}             # optional, can be empty

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Authenticate to GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      # 3Ô∏è‚É£ Setup gcloud SDK
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      # 4Ô∏è‚É£ Install GKE auth plugin (fix kubectl helm credential issue)
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      # 5Ô∏è‚É£ Get GKE credentials
      - name: Get GKE credentials
        run: |
          echo "‚è≥ Fetching credentials for GKE cluster $CLUSTER_NAME..."
          gcloud container clusters get-credentials "$CLUSTER_NAME" \
            --region "$CLUSTER_REGION" \
            --project "$PROJECT_ID"

      # 6Ô∏è‚É£ Install kubectl + Helm
      - name: Set up Kubernetes tools
        uses: azure/setup-kubectl@v4
      - name: Set up Helm
        uses: azure/setup-helm@v4

      # 7Ô∏è‚É£ Deploy microservice via Helm
      - name: Deploy Microservice via Helm
        run: |
          echo "‚è≥ Deploying microservice Helm chart..."
          helm upgrade --install "$RELEASE_NAME" ./helm/microservice \
            --namespace "$NAMESPACE" \
            --create-namespace \
            --set ingress.enabled=true \
            --set ingress.className=nginx \
            --set ingress.hosts[0].host="${STATIC_IP}.nip.io" \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType=Prefix

      # 8Ô∏è‚É£ Verify deployment
      - name: Verify Deployment
        run: |
          echo "‚è≥ Waiting for pods to be ready..."
          kubectl rollout status deployment/"$RELEASE_NAME" -n "$NAMESPACE" --timeout=180s
          echo "üìú Listing resources:"
          kubectl get pods,svc,ingress -n "$NAMESPACE"
          echo "üåê Test URL: http://${STATIC_IP}.nip.io"

